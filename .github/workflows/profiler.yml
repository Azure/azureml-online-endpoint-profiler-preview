name: profiling-online-endpoints
on:
  workflow_dispatch:
    inputs:
      SKU_LIST:
        description: 'Define the list of skus in the format of ["sku:num_concurrent_requests", "sku:num_concurrent_requests"]'     
        required: true
        default: '["Standard_F2s_v2:1", "Standard_F4s_v2:2"]'
jobs:
  create_profiler_compute:
    runs-on: ubuntu-latest
    outputs:
      PROFILER_COMPUTE_NAME: ${{ steps.set_profiler_compute_info.outputs.PROFILER_COMPUTE_NAME }}
    steps:
    - name: Azure login
      uses: azure/login@v1
      with:
        creds: ${{secrets.AZURE_CREDENTIALS}}
    - name: Install dependencies
      run: |
        az extension add -n ml -y
        sudo apt-get update -y && sudo apt-get install jq
    - name: Setup az environment
      run: |
        az config set defaults.workspace=${{secrets.AML_WORKSPACE}}
        az config set defaults.group=${{secrets.RESOURCE_GROUP}}          
        az account set -s ${{secrets.SUBSCRIPTION_ID}}
    - name: Set profiler compute info
      id: set_profiler_compute_info
      run: |
        export PROFILER_COMPUTE_NAME=profilingTest
        echo PROFILER_COMPUTE_NAME=$PROFILER_COMPUTE_NAME >> $GITHUB_ENV
        echo PROFILER_COMPUTE_SIZE=Standard_F4s_v2 >> $GITHUB_ENV
        echo "::set-output name=PROFILER_COMPUTE_NAME::$PROFILER_COMPUTE_NAME"
    - name: Check out repo
      uses: actions/checkout@v2
    - name: Create profiling compute
      run: bash -x profiling/create-profiling-compute.sh
      env:
        PROFILER_COMPUTE_NAME: ${{ env.PROFILER_COMPUTE_NAME }}
        PROFILER_COMPUTE_SIZE: ${{ env.PROFILER_COMPUTE_SIZE }}
      working-directory: code

  profiling:
    runs-on: ubuntu-latest
    needs: create_profiler_compute
    strategy:
      fail-fast: false
      matrix:
        sku_connection_pair: ${{ fromJson(github.event.inputs.SKU_LIST) }}
    steps:
    - name: Check out repo
      uses: actions/checkout@v2
    - name: Azure login
      uses: azure/login@v1
      with:
        creds: ${{secrets.AZURE_CREDENTIALS}}
    - name: Install dependencies
      run: |
        az extension add -n ml -y
        sudo apt-get update -y && sudo apt-get install jq
    - name: Setup az environment
      run: |
        az config set defaults.workspace=${{secrets.AML_WORKSPACE}}
        az config set defaults.group=${{secrets.RESOURCE_GROUP}}          
        az account set -s ${{secrets.SUBSCRIPTION_ID}}
    - name: Generate unique online-endpoint name and online-deployment name
      run: |
        export ENDPOINT_NAME=endpt-`echo $RANDOM`
        echo ENDPOINT_NAME=$ENDPOINT_NAME >> $GITHUB_ENV
        echo DEPLOYMENT_NAME=$ENDPOINT_NAME-dep >> $GITHUB_ENV 
    - name: Create online-endpoint and online-deployment
      run: bash -x profiling/create-online-endpoint.sh
      env:
        ENDPOINT_NAME: ${{ env.ENDPOINT_NAME }}
        DEPLOYMENT_NAME: ${{ env.DEPLOYMENT_NAME }}
        SKU_CONNECTION_PAIR: ${{ matrix.sku_connection_pair }}
      working-directory: code
    - name: Run profiling job
      run: bash -x profiling/how-to-profile-online-endpoint.sh
      env:
        ENDPOINT_NAME: ${{ env.ENDPOINT_NAME }}
        DEPLOYMENT_NAME: ${{ env.DEPLOYMENT_NAME }}
        SKU_CONNECTION_PAIR: ${{ matrix.sku_connection_pair }}
        PROFILER_COMPUTE_NAME: ${{ needs.create_profiler_compute.outputs.PROFILER_COMPUTE_NAME }}
      working-directory: code
    - name: Delete online-endpoint and online-deployment
      run: bash -x profiling/delete-online-endpoint.sh
      env:
        ENDPOINT_NAME: ${{ env.ENDPOINT_NAME }}
      working-directory: code
    